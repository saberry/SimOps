[{"path":"index.html","id":"preface","chapter":"1 Preface","heading":"1 Preface","text":"find form course undergraduate graduate business programs across country. Instead telling looking class, easier tell shouldn’t see:ExcelExcelExcel Add-insExcel Add-insPalasaidesPalasaidesWhile world runs Excel, Simulation Optimization Excel ensure know Excel (can use VLookUp sumproduct). Instead, focus understanding implementing. able break problems smallest parts roll parts objects. Throughout time, get hands dirty theory. dives theory serve ease greater understanding. end, however, goal application.techniques also serve nice introduction programming general, allow us scale simple objects complex pipelines. Throughout time , mostly focus using R. However, don’t live monolingual world anymore. end, see techniques translate languages (namely Python Julia) might want consider one program (speed, feature complete, ease, etc.).","code":""},{"path":"introduction.html","id":"introduction","chapter":"2 Introduction","heading":"2 Introduction","text":"world exciting methods, simulation optimization sit alone. Nobody touts things change humanity. Nobody discusses methods can solve world’s problems. …conversations reserved things like statistical methods, machine learning, almighty AI! secret, though, fancy techniques exist without simulation optimization.Optimization found nearly every science: nuclear medicine biology, electrical engineering statistics, beyond. fields interesting , goal explore optimization context business problem solving, occasional dive techniques used techniques learn courses.Simulation just fundamental sciences optimization. Nearly every event happens bound type distribution knowing distribution allows us test event. makes simulation much fun can program version real world, run program thousand times, generate distribution potential outcomes. distribution show us common event might .","code":""},{"path":"introduction.html","id":"the-story","chapter":"2 Introduction","heading":"2.1 The Story","text":"Meet Ali. Ali graduated Business Analytics program Atlantic coast 2019 made smart career choice – accepting offer work analyst cannabis industry. global cannabis industry seen explosive growth last several years (topping 9 billion 2020 project compound annual growth rate ~26% America alone). Ali’s classmates (family) questioned decision, clear industry need real analytics Ali saw real path towards making difference business (, people can’t make real difference FAANGM). Canadian cannabis industry nearly decade maturity American cannabis industry, American companies looking cover lost ground. end, American companies hiring people world create strongest possible teams. diverse backgrounds experiences, general hope teams function highest possible levels.Ali belonged team 3 analysts: Alex, Jun, Shashi. Ali youngest least experienced entire group. Ali lacked experience, made technical prowess. Ali didn’t know analytics world dark secret. Throughout Ali’s education, Python R touted important languages world – , , exciting work happens. Ali found, though, business analytics really runs Excel various add-ins.Ali goal: become valuable member team. Ali decided take anything organization needed. seemed like good idea first, Ali found Business Analytics program didn’t really offer proper preparation come.","code":""},{"path":"linear-optimization.html","id":"linear-optimization","chapter":"3 Linear Optimization","heading":"3 Linear Optimization","text":"Ali’s first task determine marketing strategy. Canadian American cannabis industries trying normalize cannabis use (mainly edibles drinks) women ages 30 55. working theory making cannabis use acceptable group “allow” married men also enjoy recreational cannabis use.Ali’s manager, Tolu, asked create semi-automated system determining advertisement spends. Thankfully, Tolu noted Ali’s coworker, Jun, already working space. Ali able jump Jun’s work make system automated without much hassle.","code":""},{"path":"linear-optimization.html","id":"continuous-optimization","chapter":"3 Linear Optimization","heading":"3.1 Continuous Optimization","text":"","code":""},{"path":"linear-optimization.html","id":"the-problem","chapter":"3 Linear Optimization","heading":"3.1.1 The Problem","text":"easy task became nightmare. Ali didn’t get csv file neatly defined columns clear outcome variable. …Ali received email (Jun copied):Hi Ali,Rayan Marketing needs:Instagram ads cost $50 dollars per hundred clicksTikTok ads cost $20 dollars per hundred clicksOver last weeks, averaged 1 female view Instagram 4 TikTok. need least 80 female views total coming week.don’t really well men; saw just 1 average male view Instagram (.9) TikTok (.8). really hoping get least 40 coming week.buy ads coming week?best,Tolu","code":""},{"path":"linear-optimization.html","id":"from-words-to-formulas","chapter":"3 Linear Optimization","heading":"3.1.2 From Words To Formulas","text":"typical analyst fashion, Ali responded , “problem!”, started digging old course notes. Unfortunately, nothing looked like problem. Ali decided cup coffee Jun way go. coffee invite even went , Jun sent Ali copy legacy Excel sheet…completely full Excel equations Solver boxes.Ali idea going sheet – sumproduct formulas, vlookups, strange things. Ali asked Jun go sheet problem together, Jun graciously agreed.Jun helped Ali break problem small pieces. “first question”, Jun said, “variables values?”Ali thought minute decided two variables problem: Instagram TikTok. “Correct!”, said Jun, “values Instagram TikTok ?” Ali went back email saw:Instagram ads cost $50 dollars per hundred clicksTikTok ads cost $20 dollars per hundred clicks“Awesome! value Instagram 50 value TikTok 20.”, Ali said. “specifically ?”, Jun asked. Ali wasn’t sure, said, “ad costs”. “Now, let show something.”, Jun wrote piece paper:\\[\n\\begin{aligned}\n\\text{ad cost} = 50_{instagram} + 20_{tiktok}\n\\end{aligned}\n\\]“else need?”, asked Jun. Ali thought minute said, “need get rest information problem!”last weeks, averaged 1 female view Instagram 4 TikTok.don’t really well men; saw just 1 average male view Instagram (.9) TikTok (.8)“Let’s put problem”, Jun back writing:\\[\n\\begin{aligned}\n\\text{ad cost} = 50_{instagram} + 20_{tiktok} \\\\\n1_{instagram} + 4_{tiktok} \\\\\n.9_{instagram} + .8_{tiktok}\n\\end{aligned}\n\\]“Rayan specific needs men women?”, asked Jun. , Ali looked email saw:need least 80 female views total coming week.really hoping get least 40 coming week.“,”, Ali began, “need least 80 views women 40 views men. , though…just baseline.”“Excellent! Check ”, Jun added following:\\[\n\\begin{aligned}\n\\text{ad cost} = 50_{x1} + 20_{x2} \\\\\n\\text{women} = 1_{instagram} + 4_{tiktok} \\geq 80 \\\\\n\\text{men} = .9_{instagram} + .8_{tiktok} \\geq 40 \\\\\n\\end{aligned}\n\\]“almost !”, Jun smiled asked, “want cost: spend much possible little possible?” “Oh”, Ali said, “’s easy: definitely want minimize cost.”\\[\n\\begin{aligned}\n\\text{Minimize:}\\\\\n\\text{ad cost} = 50_{instagram} + 20_{tiktok} \\\\\n\\text{Subject :} \\\\\n\\text{women} = 1_{instagram} + 4_{tiktok} \\geq 80 \\\\\n\\text{men} = .9_{instagram} + .8_{tiktok} \\geq 40 \\\\\n\\end{aligned}\n\\]“’s last question”, Jun said, “buy negative number ads?”. “Absolutely ”, Ali said.“now”, Jun showed Ali paper\\[\n\\begin{aligned}\n\\text{Minimize:}\\\\\n\\text{ad cost} = 50_{instagram} + 20_{tiktok} \\\\\n\\text{Subject :} \\\\\n\\text{women} = 1_{instagram} + 4_{tiktok} \\geq 80 \\\\\n\\text{men} = .9_{instagram} + .8_{tiktok} \\geq 40 \\\\\n\\text{instagram}, \\text{tiktok} \\geq 0\n\\end{aligned}\n\\]“Now put completely together, need break ”, Jun laughed.“know minimization problem”, Jun said continued, “know two variables: Instagram TikTok. may hear people call objective values.”Jun carried , “also know rules follow problem. rules called constraints. Think constraints rules reflect reality”.“Got !”, exclaimed Ali.“Let’s see ”, Jun said:\\[\n\\begin{aligned}\n\\text{Subject :} \\\\\n\\text{women} = 1_{instagram} + 4_{tiktok} \\geq 80 \\\\\n\\text{men} = .9_{instagram} + .8_{tiktok} \\geq 40 \\\\\n\\end{aligned}\n\\]“whole thing constraint matrix can break component parts!”, beamed Jun.\"Let’s start left-hand side constraint matrix, might hear referred matrix.\\[\n\\begin{aligned}\n1_{instagram} + 4_{tiktok} \\\\\n.9_{instagram} + .8_{tiktok} \\\\\n\\end{aligned}\n\\]\n“4 values, spread across 2 columns 2 rows.”, Jun said, “Just like normal table”. Jun continued, “Next come directions…things look like inequalities, also probably encounter equalities ”.“, just simple vector signs.”, Jun wrote:\\[\n\\begin{aligned}\n\\geq \\\\\n\\geq\n\\end{aligned}\n\\]“Last thing, promise.”, Jun said: “right hand side, values need achieve, referred marginal values.”\\[ \\begin{aligned}\n80 \\\\\n40\n\\end{aligned}\n\\]“Tolu said going program Q Boa, something like . can’t help , let know can anything else ”, Jun said walked back office.Ali felt better, getting information R going little bit tricky.","code":""},{"path":"linear-optimization.html","id":"application","chapter":"3 Linear Optimization","heading":"3.1.3 Application","text":"Ali feeling pretty good ! soon computer unlocked, StackOverlow came rescue – user called Not_Prof_Berry answered questions linear programming R.seemed like Ali going need package called linprog:specific function solveLP, Ali saw needed objects created first: cvec, bvec, Amat, const.dir. Ali remembered common mantra among professors – “Read flipping manual!”. reading helpfile, Ali determined cvec object needed contain objective values:Ali figured bvec came right-hand side constraint matrix (values margin constraint matrix):Amatrix felt little bit tricky. definitely needed constraint matrix, somewhat tough get right shape. Ali tried things:returned matrix:Ali knew needed function work properly.Finally, Ali made character vector const.dir (.e., constraint directions):4 objects, Ali ready solve problem!model solved, Ali needed grab information: recommended values Instagram TikTok, much money going cost.First, much money going cost:Got . $1000 total spend.Second, marketing mix:gives 0 ads Instagram 50 ads TikTok! way correct. Everyone knows 0 answer means problem. Ali take solution Tolu? Ali figured best course action check solution Jun.","code":"\n# install.packages('linprog')\n\nlibrary(linprog)\nobjective_values <- c(50, 20)\nconstraint_values <- c(80, 40)\nconstraint_matrix <- rbind(c(1, 4), \n                           c(.9, .8))\n\nconstraint_matrix2 <- matrix(c(1, 4, .9, .8), \n                             ncol = 2, nrow = 2, \n                             byrow = TRUE)\nstr(constraint_matrix) num [1:2, 1:2] 1 0.9 4 0.8\nstr(constraint_matrix2) num [1:2, 1:2] 1 0.9 4 0.8\nconstraint_directions <- c(\">=\", \">=\")\nsolved_model <- solveLP(cvec = objective_values, \n                        bvec = constraint_values, \n                        Amat = constraint_matrix, \n                        maximum = FALSE, \n                        const.dir = constraint_directions)\nsolved_model$opt[1] 1000\nsolved_model$solution 1  2 \n 0 50 "},{"path":"linear-optimization.html","id":"theory","chapter":"3 Linear Optimization","heading":"3.1.4 Theory","text":"Like early-career analysts, Ali feeling beaten – going back Jun quickly felt like failure. Like experienced analysts, Jun happy help explain happening.Jun reminded Ali complete notation created together.\\[\n\\begin{aligned}\n\\text{Minimize:}\\\\\n\\text{ad cost} = 50_{instagram} + 20_{tiktok} \\\\\n\\text{Subject :} \\\\\n\\text{women} = 1_{instagram} + 4_{tiktok} \\geq 80 \\\\\n\\text{men} = .9_{instagram} + .8_{tiktok} \\geq 40 \\\\\n\\text{instagram}, \\text{tiktok} \\geq 0\n\\end{aligned}\n\\]“Let’s break little bit”, turning whiteboard, Jun wrote:\\[1_{instagram} + 4_{tiktok} = 80\\]Can solved :\\[(instagram = 0, tiktok = 20) \\text{ } (instagram = 80, tiktok = 0)\\]:\\[.9_{instagram} + .8_{tiktok} = 40\\]Can solved :\\[(instagram = 44.44, tiktok = 0) \\text{ } (instagram = 0, tiktok = 50)\\]“’s okay don’t remember didn’t take linear algebra”, Jun noted, “just know solving equations obtain set points.”“Okay”, Ali nodded, “points?”“Plot ”, Jun went back writing:“Now lines plotted, can clearly see might find answer!”, beamed Jun.“Umm…’s little fuzzy”, admitted puzzled Ali.“Completely expected”, Jun smiled. “Let’s find feasible region – place answer lives!”“go try every single set points shaded area, never finish wasting time”, Jun chuckled continued, “already know looking values minimize solution, can completely ignore every point doesn’t sit lines.”Jun made circles plot said, “points give us answer!”“called extreme point theorem basically says optimal solution rest somewhere extreme points feasible region”, said Jun, “makes life much easier finding answer.”“can just simple math now”, Jun wrote\"“smallest value?”, Jun asked.conference room glowed Ali’s excitement! “got now!”, Ali exclaimed. “can get optimal value 1000 purchasing 50 ads TikTok 0 Instagram! solution correct!”“Ahhh!”, Jun started laughing, “definitely optimal solution, really think ’s correct solution?” Jun shook head continued laughing, “think Tolu going take advice put anything Instagram?”\nvia GIPHY\nAli’s mind sufficiently wrecked. optimal answer correct answer? Stupid analytics – nothing can ever easy.“’s best path forward, ?”, Ali asked Jun. “Simple”, Jun replied, “ask much want put Instagram becomes constraint!”important lesson Ali: analytics tasks never one-shot deal. Clarity needs sought work can actually happen.quick email exchange Rayan Marketing, Ali found least 10 ads needed Instagram.","code":"\ninsta_cost = 50\n\ntt_cost = 20\n\ninsta_cost * 0 + tt_cost * 50[1] 1000\ninsta_cost * 34.32 + tt_cost * 11.42[1] 1944.4\ninsta_cost * 80 + tt_cost * 0[1] 4000"},{"path":"linear-optimization.html","id":"classoverflow","chapter":"3 Linear Optimization","heading":"3.1.5 ClassOverflow","text":"Let’s spend time helping Ali. need two things: 1) specify appropriate model 2) solve .two different ways; good know, ’d imagine find one valuable .","code":""},{"path":"linear-optimization.html","id":"using-python","chapter":"3 Linear Optimization","heading":"3.1.6 Using Python","text":"great chunk Ali’s coursework R, just excursions Python. statistics, R reigns supreme (statsmodels Python really pretty solid). machine learning, take pick (fanboys speak absolutes one better – pros cons). Linear programming bit different. R clear advantages terms flexibility, Google put effort towards implementing GLOP solver Python (among languages).pulp package going look different saw R, definite improvements expressing model:really aren’t breaking problem small objects . Instead, really need take math form pop model – pretty easy stuff.Finally, Google’s tools. current SoTA optimization (think Google gets people navigated). ’ll notice aren’t really anything different saw pulp:","code":"from pulp import *\n\nmodel = LpProblem(name = \"test-model\", \n  sense = LpMinimize)\n\nx = LpVariable(name = \"instagram\", lowBound = 0)\ny = LpVariable(name = \"tiktok\", lowBound = 0)\n\nmodel += (1 * x + 4 * y >= 80, \"women\")\nmodel += (.9 * x + .8 * y >= 40, \"men\")\n\nobj_func = 50 * x + 20 * y\nmodel += obj_func\n\nmodel\n\nstatus = model.solve()\n\nmodel.objective.value()\n\nx.value()\ny.value()\n\nfor var in model.variables(): \n  print(f\"{var.name}: {var.value()}\")from ortools.linear_solver import pywraplp\n\nsolver = pywraplp.Solver.CreateSolver('GLOP')\nx = solver.NumVar(0, solver.infinity(), 'instagram')\ny = solver.NumVar(0, solver.infinity(), 'tiktok')\n\nsolver.NumVariables()2solver.Add(1 * x + 4 * y >= 80)<ortools.linear_solver.pywraplp.Constraint; proxy of <Swig Object of type 'operations_research::MPConstraint *' at 0x7fb5303b7690> >solver.Add(.9 * x + .8 * y >= 40)<ortools.linear_solver.pywraplp.Constraint; proxy of <Swig Object of type 'operations_research::MPConstraint *' at 0x7fb5303b7540> >solver.NumConstraints()2solver.Minimize(50 * x + 20 * y)\n\nstatus = solver.Solve()\n\nsolver.Objective().Value()999.9999999999999x.solution_value()0.0y.solution_value()49.99999999999999"},{"path":"integer-programming.html","id":"integer-programming","chapter":"4 Integer Programming","heading":"4 Integer Programming","text":"","code":""},{"path":"integer-programming.html","id":"troubling-solutions","chapter":"4 Integer Programming","heading":"4.1 Troubling Solutions","text":"Ali figured whole linear programming thing felt good – troubling solution came back.per usual, trouble began email:’s good Ali? ’m Bao, retail operations group! heard wizard stuff, hoping can help us .issue many stores: often find overstocked certain edibles, can’t keep others shelf. ’d love balance , aren’t really sure saying, “Just change production”, answer. matter make batches, obviously like cheap possible.basics deal :two primary classes edibles: gummies candy bars.aren’t really worried ingredients grown greenhouses. Food supplies easy, green supplies aren’t.make batch candy, requires 4 grams raw flower, 1 gram distillates, 1 gram pressed trichromes.make batch gummies, requires 3 grams raw flower 1 gram distillates.Every month, start 200 grams raw flower, 500 grams distallate, 100 grams pressed trichromes.store needs , can purchase standard bag raw flower 80 dollars per bag.bag raw flower can produce 10 grams distallate, 20 grams raw flower, 2 grams pressed trichromesProducing candy costs 30 dollars per batch; producing gummies costs 40 dollars batchWe need least 1000 selling units per month.owe one!Bao“Oh yeah”, though Ali, “going walk park.”great! Make 422.222 batches candy, 577.778 batches gummies, buy 161.111 bags…first thing Ali though , “actual…numbers correct. make .222 something? acceptable? second thought, ever buy tenth bag?”Just sure, Ali checked every value everything matched just fine. causing problem can fixed?Looks like another visit Jun…just happens vacation.","code":"\nlibrary(linprog)\n\n# Remember...the c vector is the top part of the whole problem:\n# 30candy + 40gummies + 80bag\n\ncvec <- c(candy = 30,\n          gummies = 40,\n          bag = 80)\n\n# The b vector is the margins of the problem:\n# What comes on the right hand side of the \n# equality sign.\n\nbvec <- c(distillate = 500,\n          flower = 200,\n          trichromes = 100,\n          batch_need = 1000)\n\n# These are the directions -- hopefully not\n# much of a mystery.\n\nconstDirs <- c(\"<=\", \"<=\", \"<=\", \">=\")\n\n# The a matrix comprises all of the rows of\n# the constraint matrix (just not the margins\n# or the directions).\n\n# 1candy + 1gummies - 10bag\n# 4candy + 3gummies - 20bag\n# 1candy + 0gummies - 2bag\n# 1candy + 1gummies + 0bag\n\naMat <- rbind(dis_const = c(1, 1, -10),\n              flow_const = c(4, 3, -20),\n              trich_const = c(1, 0, -2),\n              batch_const = c(1, 1, 0))\n\n# All together, we have:\n# 30candy + 40gummies + 80bag\n# 1candy + 1gummies - 10bag <= 500\n# 4candy + 3gummies - 20bag <= 200\n# 1candy + 0gummies - 2bag <= 100\n# 1candy + 1gummies + 0bag >= 1000\n\nsolveLP(cvec, bvec, aMat, maximum = FALSE,\n        const.dir = constDirs)\n\nResults of Linear Programming / Linear Optimization\n\nObjective function (Minimum): 48666.7 \n\nIterations in phase 1: 2\nIterations in phase 2: 1\nSolution\n            opt\ncandy   422.222\ngummies 577.778\nbag     161.111\n\nBasic Variables\n                  opt\ncandy         422.222\ngummies       577.778\nbag           161.111\nS distillate 1111.111\n\nConstraints\n             actual dir bvec    free     dual dual.reg\ndistillate -611.111  <=  500 1111.11  0.00000  1111.11\nflower      200.000  <=  200    0.00  3.33333  5200.00\ntrichromes  100.000  <=  100    0.00  6.66667   380.00\nbatch_need 1000.000  >= 1000    0.00 50.00000      Inf\n\nAll Variables (including slack variables)\n                  opt cvec      min.c max.c     marg marg.reg\ncandy         422.222   30  -60.00000    36       NA       NA\ngummies       577.778   40  -46.00000    70       NA       NA\nbag           161.111   80 -140.00000   200       NA       NA\nS distillate 1111.111    0   -6.00000    12  0.00000       NA\nS flower        0.000    0   -3.33333   Inf  3.33333     5200\nS trichromes    0.000    0   -6.66667   Inf  6.66667      380\nS batch_need    0.000    0  -50.00000   Inf 50.00000      Inf"},{"path":"integer-programming.html","id":"classoverflow-1","chapter":"4 Integer Programming","heading":"4.2 ClassOverflow","text":"Let’s spend time exploring package functionality:Remember ROI last time? pretty handy functionality.can use objects already createdNow, Ali knows make 420 units candy (coincidence?), 580 units gummies, 161 bags.done either case constrain possible solution set include integer values. “” substantially complicated.follows purely cursory glance – interested knowing , can check resources!naive approach solve linear programming problem (.e., LP relaxation) round resultsThe naive approach solve linear programming problem (.e., LP relaxation) round resultsSome matrices totally unimodular (big concern us) always return integer value.matrices totally unimodular (big concern us) always return integer value.Cutting planes solve LP relaxation, test optimal value integer. non-integer solution get reworked constraint process continues optimal integer solution found.Cutting planes solve LP relaxation, test optimal value integer. non-integer solution get reworked constraint process continues optimal integer solution found.Branch bound algorithms produces possible solution sets transverses subsets sets find answer.Branch bound algorithms produces possible solution sets transverses subsets sets find answer.Branch cut algorithms combine previous 2 approaches.Branch cut algorithms combine previous 2 approaches.","code":"\nlibrary(lpSolve)\n\ntest <- lpSolve::lp(direction = \"min\", objective.in = cvec,\n            const.mat = aMat, const.dir = constDirs,\n            const.rhs = bvec, all.int = TRUE)\nlibrary(ROI)\nlibrary(ROI.plugin.glpk)\n# When working within ROI, we string together the entire constraint\n# matrix (A matrix, directions, and the b vector) using the L_constraint\n# function\n\nmodel_constraints <- L_constraint(L = aMat, \n                                  dir = constDirs, \n                                  rhs = bvec)\n\n# After we string those together, we can throw them OP;\n# this just creates the model, but doesn't actually \n# solve the problem.\n# The big difference below is in the types column; \n# this changes it from continuous (\"C\") to \n# integer (\"I\").\n\nmodel_creation <- OP(objective = cvec, \n                     constraints = model_constraints, \n                     types = rep(\"I\", length(cvec)), \n                     maximum = FALSE)\n\nmodel_solved <- ROI_solve(model_creation)\n\nsolution(model_solved, \"primal\")  candy gummies     bag \n    420     580     161 \nsolution(model_solved, \"objval\")[1] 48680"},{"path":"integer-programming.html","id":"transportation-problems","chapter":"4 Integer Programming","heading":"4.3 Transportation Problems","text":"sending updated solution Bao, Ali felt sense relief – learning happening solutions getting easier come . Unfortunately Ali, stories success spread wildly wasn’t long people came knocking. first request Castel, director grow operations; second request Blaise, director Human Resources.Castel’s problem seemed pretty simple: greenhouses contain raw product raw product needs shipped different processing facilities. processing facility capacity need cost moving products different facilities:Castel drew map cost move product greenhouses processing facilities:added following notes:Greenhouse 1 can contribute 1200 poundsGreenhouse 2 can contribute 1000 poundsGreenhouse 3 can contribute 800 poundsProcessing facility 1 needs least 1100 poundsProcessing facility 2 needs least 400 poundsProcessing facility 3 needs least 750 poundsProcessing facility 4 needs least 750 poundsHow much greenhouse send processing facility cheaply possible?Ali necessary information, took Castel’s words translated expression:\\[\n\\begin{aligned}\nM = 35_{x_{11}} + 30_{x_{12}} + 40_{x_{13}} + 32_{x_{14}} + 37_{x_{21}} + 40_{x_{22}} + \\\\\n42_{x_{23}} + 25_{x_{24}} + 40_{x_{31}} + 15_{x_{32}} + 20_{x_{33}} + 28_{x_{34}} \\\\\nsubject \\, \\\\\nX_{11} + X_{12} + X_{13} + X_{14} \\leq 1200 \\\\\nX_{21} + X_{22} + X_{23} + X_{24} \\leq 1000 \\\\\nX_{31} + X_{32} + X_{33} + X_{34} \\leq 800 \\\\\nX_{11} + X_{21} + X_{31} \\geq 1100 \\\\\nX_{12} + X_{22} + X_{23} \\geq 400 \\\\\nX_{13} + X_{23} + X_{33} \\geq 750 \\\\\nX_{14} + X_{24} + X_{34} \\geq 750 \\\\\nX_{ij} \\geq 0\n\\end{aligned}\n\\]“’s nice solution!”, Ali remarked emailed Castel results:Hey Castel,greenhouse 1, send 850 pounds processing 1 350 pounds processing 2.greenhouse 2, send 250 pounds processing 1 750 pounds processing 4.greenhouse 3, send 50 pounds processing 50 750 processing 3.moves cost 84000 dollars.Let know can help anything else,Ali","code":"\ncMat <- c(35, 30, 40, 32, 37, 40,\n     42, 25, 40, 15, 20, 28)\n\nb <- c(1200, 1000, 800, 1100, 400, 750, 750)\n\nA <- rbind(c(1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), \n           c(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0),\n           c(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1), \n           c(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0),\n           c(0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0), \n           c(0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0),\n           c(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1))\n\n# Remember that the rep function below only serves to replicate whatever\n# you put there. So this:\n# rep(\"<=\", 12)\n# Is the same as:\n# c(\"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\", \"<=\")\n# One is clearly an easier thing to code.\n\nconstraints <- L_constraint(A, \n                            c(rep(\"<=\", 3), rep(\">=\", 4)), \n                            b)\n\n# The length function returns how many items are in the vector.\n\nmodel <- OP(objective = cMat, \n            constraints = constraints,\n            types = rep.int(\"I\", length(cMat)), \n            maximum = FALSE)\n\nresult <- ROI::ROI_solve(model, \"glpk\", verbose = TRUE)<SOLVER MSG>  ----\nGLPK Simplex Optimizer, v4.65\n7 rows, 12 columns, 24 non-zeros\n      0: obj =   0.000000000e+00 inf =   3.000e+03 (4)\n      6: obj =   1.049000000e+05 inf =   0.000e+00 (0)\n*    10: obj =   8.400000000e+04 inf =   0.000e+00 (0)\nOPTIMAL LP SOLUTION FOUND\nGLPK Integer Optimizer, v4.65\n7 rows, 12 columns, 24 non-zeros\n12 integer variables, none of which are binary\nInteger optimization begins...\nLong-step dual simplex will be used\n+    10: mip =     not found yet >=              -inf        (1; 0)\n+    10: >>>>>   8.400000000e+04 >=   8.400000000e+04   0.0% (1; 0)\n+    10: mip =   8.400000000e+04 >=     tree is empty   0.0% (0; 1)\nINTEGER OPTIMAL SOLUTION FOUND\n<!SOLVER MSG> ----\nresult$objval[1] 84000\ntransportation_solution <- solution(result)\n\n# Just setting names to make life easier.\n\nnames(transportation_solution) <- c(\"g1_p1\", \"g1_p2\", \"g1_p3\", \"g1_p4\", \n                                    \"g2_p1\", \"g2_p2\", \"g2_p3\", \"g2_p4\",  \n                                    \"g3_p1\", \"g3_p2\", \"g3_p3\", \"g3_p4\")"},{"path":"integer-programming.html","id":"binary-integer-programming","chapter":"4 Integer Programming","heading":"4.4 Binary Integer Programming","text":"transportation problem proved easy one, broken ’s mathematical expression. Blaise’s request, though, proved bit challenging.’s life, unmet friend?’ve got situation connoisseur’s cabinet – keep expensive stuff.room single feature cabinet, can’t put everything .’d like put things won’t take ton space, also bring cash.list products, prices, space attached. can’t use 10 spaces.ideas?BlaiseTurns , Blaise just asking version knapsack problem:Ali wondered, “happen changed constraint 0 1?”Ali ?","code":"\n# Nothing tricky below -- all we are doing is creating a data frame.\n# The data frame contains 3 columns: item, space, and value.\n\nspecial_items <- data.frame(item = c(\"cannabis_caviar\", \"oracle\", \"fruity_pebbles\", \n                                     \"loud_dream\", \"white_fire\", \"j1\", \n                                     \"hammerhead\", \"sista\", \"goblin\", \n                                     \"fishermen\", \"cloud\", \"paradise\"), \n                            space = c(1.5, 1, 1, \n                                      1.25, 1, 1, \n                                      6, 5, 6, \n                                      7, 3, 2), \n                            value = c(800, 450, 400, \n                                      400, 500, 350, \n                                      1600, 2325, 1005, \n                                      750, 250, 875))\n\n# Below is just a little bit different from what we have seen:\n# instead of specifying a whole vector on the RHS, we just\n# have a single number. We are really only rocking with \n# a single constraint.\n\nconstraints <- L_constraint(special_items$space, \"<=\", 10) \n\n# Going to set those variables to be integers.\n\nmodel <- OP(objective = special_items$value, \n            constraints = constraints,\n            types = rep.int(\"I\", 12), \n            maximum = TRUE)\n\nsolved_model <- ROI_solve(model)\n\n# The line below looks weird, but we are literally saying\n# to take our solution and then set the names of that \n# data frame to the item names from our special_items \n# data frame. The |> is R's native pipe operator. \n# The only reason we are doing this is to make the solution\n# easier to see (i.e., which itmes should we select).\n\nsolution(solved_model) |> \n  setNames(special_items$item)cannabis_caviar          oracle  fruity_pebbles      loud_dream \n              6               0               0               0 \n     white_fire              j1      hammerhead           sista \n              1               0               0               0 \n         goblin       fishermen           cloud        paradise \n              0               0               0               0 \nsolution(solved_model, \"objval\")[1] 5300\nmodel <- OP(objective = special_items$value, \n            constraints = constraints,\n            types = rep.int(\"B\", 12), \n            maximum = TRUE)\n\nsolved_model <- ROI_solve(model)\n\nsolution(solved_model) |> \n  setNames(special_items$item)cannabis_caviar          oracle  fruity_pebbles      loud_dream \n              0               1               1               0 \n     white_fire              j1      hammerhead           sista \n              1               0               0               1 \n         goblin       fishermen           cloud        paradise \n              0               0               0               1 \nsolution(solved_model, \"objval\")[1] 4550"},{"path":"simulation.html","id":"simulation","chapter":"5 Simulation","heading":"5 Simulation","text":"looking far ahead?Focus present instead.","code":""},{"path":"nonlinear-optimization.html","id":"nonlinear-optimization","chapter":"6 Nonlinear Optimization","heading":"6 Nonlinear Optimization","text":"clearly taken linear line get point, probably go backwards across linear line.","code":""},{"path":"process-simulation.html","id":"process-simulation","chapter":"7 Process Simulation","heading":"7 Process Simulation","text":"Ali absolutely smoked (pun intended) handling optimization – hopefully standard modeling come . High hopes always short lived, though, Ali thrown right back dark arts Operations-based research.“-hands” meeting, Ali chance listen Rene, Director Retail Analytics, talk store efficiency. Rene explained process typically happens.“average store front pretty small need careful many people inside one time”, Rene started. “can’t 8 people waiting lobby ID’s checked”, Rene continued, “don’t want turn people away, need get efficient ID checks bud-tending”.Ali feeling good success wasn’t afraid ask questions – “Can explain process ?”, Ali asked.“Sure”, Rene said. “pretty easy, people walk door wait ID checked.”“ID checked can meet one bud-tenders – pick poison pay.”Ali drawing process made sure correct:“Seem right?”, Ali asked.“’s right”, Rene said.“many people checking IDs many bud tenders ?”, Ali asked.“kinda depends”, Rene said, “usually just one person checking IDs usually two bud tenders.”Ali one question: “long steps take?”“Uhhhhh…’ll ask around get back ”, Rene noted.“excellent”, Ali thought, “give time chat Alex.” Alex resident expert simulations kind, Ali knew ally .","code":"\nlibrary(DiagrammeR)\n\ngrViz(\"\ndigraph {\n  graph [overlap = true, fontsize = 10, rankdir = LR]\n  \n  node [shape = box, style = filled, color = black, fillcolor = aliceblue]\n  A [label = 'ID Check Line']\n  B [label = 'ID Check']\n  C [label = 'Bud Tender Line']\n  D [label = 'Bud Tender']\n  E [label = 'Pay']\n\n  A->B B->C C->D D->E\n}\n\")"},{"path":"process-simulation.html","id":"discrete-event-simulation","chapter":"7 Process Simulation","heading":"7.1 Discrete Event Simulation","text":"Ali finally caught Alex, Alex happy share finer points process simulation.","code":""},{"path":"process-simulation.html","id":"queueing-theory","chapter":"7 Process Simulation","heading":"7.2 Queueing Theory","text":"Queues notation (Kendall’s notation).\\(/B/C/D\\):\\(= arrival\\, process\\)\\(B = service\\, process\\)\\(C = server\\, number\\)\\(D = que\\, capacity\\)\\(M/D/k\\)\\(M/M/k\\)M generally stands Markov ExponentialD deterministic: jobs require fixed amount time.k number servers/workers/etc.generally assumed infinite buffer.queue \\(M/D/k\\), can easily compute helpful statistics (don’t need fancy software help us).\\(\\lambda\\) = arrival rate\\(\\mu\\) = service rate\\(\\rho = \\frac{\\lambda}{\\mu}\\) = utilizationAverage number entities system :\\[ L = \\rho + \\frac{1}{2}\\Bigg(\\frac{\\rho^2}{1 - \\rho}\\Bigg) \\]Average number queue:\\[ L_Q = \\frac{1}{2}\\Bigg(\\frac{\\rho^2}{1 - \\rho}\\Bigg) \\]Average system waiting time:\\[ \\omega = \\frac{1}{\\mu}+\\frac{\\rho}{2\\mu(1 - \\rho)} \\]Average waiting time queue:\\[ \\omega_Q = \\frac{\\rho}{2\\mu(1 - \\rho)} \\]","code":""},{"path":"process-simulation.html","id":"distributions","chapter":"7 Process Simulation","heading":"7.3 Distributions","text":"","code":""},{"path":"process-simulation.html","id":"normal-distribution","chapter":"7 Process Simulation","heading":"7.3.1 Normal Distribution","text":"normal distribution, know \\(\\mu\\) \\(\\sigma\\).Want test variable normally distributed?","code":"\nnormal_variable <- rnorm(5000, mean = 2.5, sd = .5)\n\nexponential_variable <- rexp(5000, 2.5)\n\nqqnorm(normal_variable)\nqqnorm(exponential_variable)\nshapiro.test(normal_variable)\n    Shapiro-Wilk normality test\n\ndata:  normal_variable\nW = 0.99956, p-value = 0.3321\nshapiro.test(exponential_variable)\n    Shapiro-Wilk normality test\n\ndata:  exponential_variable\nW = 0.81619, p-value < 2.2e-16"},{"path":"process-simulation.html","id":"exponential-distribution","chapter":"7 Process Simulation","heading":"7.3.2 Exponential Distribution","text":"can know one thing exponential distribution: \\(\\mu\\) (also expressed rate).Wanna test ?","code":"\nhist(exponential_variable)"},{"path":"process-simulation.html","id":"poisson-distribution","chapter":"7 Process Simulation","heading":"7.3.3 Poisson Distribution","text":"poisson interesting distribution – tends deal count-related variables. tells us probability count occuring. know \\(\\lambda\\) (, rate).\\(\\lambda\\) just fancy way saying average number events, incidence rate.","code":""},{"path":"process-simulation.html","id":"uniform-distribution","chapter":"7 Process Simulation","heading":"7.3.4 Uniform Distribution","text":"people tend think Gaussian distribution vanilla distributions, really – say distinction belongs uniform distribution. don’t even get fancy Greek letters, just minimum maximum. ? knowing min max tell us equal probability drawing value anywhere within range.","code":""},{"path":"process-simulation.html","id":"performance","chapter":"7 Process Simulation","heading":"7.4 Performance","text":"service level simulation fraction demand satisfied.\\[ Entrance  \\: Service \\: Level = \\frac{Objects \\: Entering}{Objects \\: Entering + Objects \\: Unable \\: \\: Enter}\\], looking number people wanted join process, . service level 1, 100% objects able get process. service level .5 indicate 50% objects able enter.overall mean service level process mean service levels calculated simulation.mean cycle time buffer mean amount time object takes move buffer simulation.overall mean cycle time buffer mean mean cycle time buffer simulation.","code":""},{"path":"process-simulation.html","id":"the-dispensary","chapter":"7 Process Simulation","heading":"7.5 The Dispensary","text":"interarrival times customers follows exponential distribution \\(\\mu = 2 \\, minutes\\).dispensary hold 8 people, safety reasons. person arrives line full, person get line.bud tender’s service time can approximated normal distribution \\(\\mu = 2.4 \\, minutes\\) \\(\\sigma = .5 \\, minutes\\).","code":"\nlibrary(DiagrammeR)\ngrViz(\"\ndigraph {\n  graph [overlap = true, fontsize = 10, rankdir = LR]\n  \n  node [shape = box, style = filled, color = black, fillcolor = aliceblue]\n  \n  A [label = 'Door']\n  B [label = 'Line']\n  C [label = 'Teller 1']\n  D [label = 'Teller 2']\n  E [label = 'Served']\n  \n  A->B \n  B->C\n  B->D\n  C->E\n  D->E\n}\n\")"}]
